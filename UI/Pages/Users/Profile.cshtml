@page
@using System.Text.Json
@model ProfileModel
@{
    ViewData["Title"] = "Perfil de Usuario";
    var index = 0;
}

<div class="container mt-5 pt-4 text-light">
    <div class="d-flex align-items-center justify-content-between flex-wrap mb-4">
        <div class="d-flex align-items-center">
            <img src="@Model.AvatarUrl" class="rounded-circle me-3" width="80" height="80"
                alt="Avatar de @Model.UserName" />
            <div>
                <h2 class="mb-1 fw-bold text-white">@Model.UserName</h2>
                <p class="text-secondary mb-0">@Model.Bio</p>
            </div>
        </div>
        <div class="d-flex align-items-center mt-3 mt-md-0">
            <a href="#" class="btn btn-outline-light me-4 button-glass-blue">EDIT PROFILE</a>

            <div class="text-center me-4">
                <span class="fw-bold d-block text-white">@Model.TotalGames</span>
                <small class="text-secondary">GAMES</small>
            </div>
            <div class="text-center me-4">
                <span class="fw-bold d-block text-white">@Model.TotalFollowing</span>
                <small class="text-secondary">FOLLOWING</small>
            </div>
            <div class="text-center">
                <span class="fw-bold d-block text-white">@Model.TotalFollowers</span>
                <small class="text-secondary">FOLLOWER@(Model.TotalFollowers == 1 ? "" : "S")</small>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <ul class="nav nav-tabs profile-tabs px-3 py-2 mb-4">
        <li class="nav-item">
            <a class="nav-link active" href="/Profile">Profile</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/Profile/Activity">Activity</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/Profile/Games">Games</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/Profile/Reviews">Reviews</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/Profile/Lists">Lists</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/Profile/Favorites">Favorites</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" href="/Profile/Network">Network</a>
        </li>
    </ul>
</div>

<div class="container">
    <div class="row">
        <!-- IZQUIERDA: GAMES Y ACTIVIDAD -->
        <div class="col-lg-9">
            <!-- FAVORITE GAMES -->
            <h4 class="text-light">Favorite Games</h4>
            <div class="d-flex flex-wrap gap-3 mb-4">
                @foreach (var game in Model.FavoriteGames)
                {
                    <a asp-page="/Details" asp-route-id="@game.Id" class="review-card text-decoration-none" title="@game.Title">
                        <img src="@game.CoverUrl" class="card-img-top" alt="@game.Title" />
                    </a>
                }
            </div>

            <!-- RECENT ACTIVITY -->
            <h4 class="text-light">Recent Activity</h4>
            <div class="d-flex flex-wrap gap-3 mb-4">
                @foreach (var activity in Model.RecentActivities)
                {
                    <div class="review-card text-center">
                        <a asp-page="/Game/Details" asp-route-id="@activity.GameId" class="d-block mb-2">
                            <img src="@activity.CoverUrl" class="card-img-top" alt="@activity.Title" />
                        </a>
                        <div class="rating-stars">
                            @for (var i = 1; i <= 5; i++)
                            {
                                if (activity.Rating >= i)
                                {
                                    <i class="bi bi-star-fill text-warning"></i>
                                }
                                else if (activity.Rating >= i - 0.5)
                                {
                                    <i class="bi bi-star-half text-warning"></i>
                                }
                                else
                                {
                                    <i class="bi bi-star text-warning"></i>
                                }
                            }

                            @if (activity.Liked)
                            {
                                <i class="bi bi-heart-fill text-danger ms-1"></i>
                            }

                            @if (activity.Reviewed)
                            {
                                <a asp-page="/Review/Details" asp-route-id="@activity.ReviewId" title="View Review" class="text-white text-decoration-none">
                                    <i class="bi bi-chat-left-text ms-1"></i>
                                </a>
                            }
                        </div>
                    </div>
                }
            </div>
        </div>

        <!-- DERECHA: WATCHLIST Y COLLAGE -->
        <div class="col-lg-3">
            <!-- WATCHLIST -->
            <h6 class="text-muted text-uppercase d-flex justify-content-between mb-2">
                <span>Watchlist</span>
                <span class="fw-normal">@Model.Watchlist.Count</span>
            </h6>

            <div class="d-flex gap-1 overflow-auto mb-4">
                @foreach (var game in Model.Watchlist)
                {
                    <a asp-page="/Game/Details" asp-route-id="@game.Id">
                        <img src="@game.CoverUrl" alt="@game.Title" title="@game.Title"
                             style="height: 120px; width: 80px; object-fit: cover; border-radius: 4px;" />
                    </a>
                }
            </div>

            <!-- COLLAGE DE SECCIONES -->
            <div class="d-flex flex-column gap-4">
                @foreach (var seccion in Model.SeccionesJuegos)
                {
                    var id = $"collage-{index++}";
                    var json = JsonSerializer.Serialize(seccion.Value, new JsonSerializerOptions
                    {
                        PropertyNamingPolicy = JsonNamingPolicy.CamelCase
                    });

                    <div class="card mb-3 card-glossy-light">
                        <div id="@id" class="poster-collage"></div>
                        <div class="card-body">
                            <h5 class="card-title">@seccion.Key</h5>

                            @foreach (var juego in seccion.Value)
                            {
                                <div class="juego-info mb-2">
                                    <strong>@juego.Titulo</strong><br />
                                    <span class="text-muted">@juego.DescripcionCorta</span>
                                </div>
                            }

                            <p class="card-text"><small class="text-body-secondary">Última actualización...</small></p>
                        </div>
                    </div>

                    <script>
                        document.addEventListener("DOMContentLoaded", function () {
                            const pelis = @Html.Raw(json);
                            const cont = document.getElementById("@id");

                            if (cont && pelis) {
                                pelis.forEach((peli, i) => {
                                    const img = document.createElement('img');
                                    img.src = peli.imagenUrl;
                                    img.alt = peli.titulo;
                                    img.classList.add('poster');
                                    img.style.left = `${i * 65}px`;
                                    cont.appendChild(img);
                                });
                            }
                        });
                    </script>
                }
            </div>
        </div>
    </div>
</div>

<div class="container">
    <h4 class="text-dark">Recent Reviews</h4>
    @foreach (var review in Model.RecentReviews)
    {
        <div class="d-flex mb-4 border-bottom pb-3">
            <img src="@review.CoverUrl" alt="@review.GameTitle" class="rounded me-3"
                style="width: 60px; height: 90px; object-fit: cover;" />

            <div>
                <a asp-page="/Game/Details" asp-route-id="@review.GameId" class="text-decoration-none text-light">
                    <strong class="fs-5">@review.GameTitle</strong> <span class="text-muted">@review.Year</span>
                </a>

                <div class="mb-1">
                    @for (var i = 1; i <= 5; i++)
                    {
                        if (review.Rating >= i)
                        {
                            <i class="bi bi-star-fill text-success"></i>
                        }
                        else if (review.Rating >= i - 0.5)
                        {
                            <i class="bi bi-star-half text-success"></i>
                        }
                        else
                        {
                            <i class="bi bi-star text-success"></i>
                        }
                    }

                    <i class="bi bi-heart-fill text-warning ms-2"></i>
                    <small class="text-muted"> Watched @review.WatchedDate.ToString("dd MMM yyyy")</small>
                </div>

                <p class="mb-1 text-light" style="max-width: 700px;">
                    @Html.Raw(review.ContainsSpoilers ? $"<em>{review.Content}</em>" : review.Content)
                </p>

                
                <button class="btn btn-link p-0 like-review-btn text-white text-decoration-none" data-review-id="@review.Id">
                    <i class="bi bi-heart me-1"></i> <span>Like review</span>
                </button>

            </div>
        </div>
    }

</div>


@section Scripts {
<script>
    document.addEventListener("DOMContentLoaded", function () {
        const buttons = document.querySelectorAll(".like-review-btn");

        buttons.forEach(button => {
            button.addEventListener("click", function () {
                const icon = this.querySelector("i");
                const text = this.querySelector("span");

                // Alternar estado
                const liked = icon.classList.contains("bi-heart-fill");

                if (liked) {
                    icon.classList.remove("bi-heart-fill");
                    icon.classList.add("bi-heart");
                    text.textContent = "Like review";
                } else {
                    icon.classList.remove("bi-heart");
                    icon.classList.add("bi-heart-fill");
                    text.textContent = "Liked";
                }

                // Simulación (en el futuro aquí haces una petición POST al backend)
                const reviewId = this.dataset.reviewId;
                console.log(`Review ${reviewId} liked status changed to ${!liked}`);
            });
        });
    });
</script>
}

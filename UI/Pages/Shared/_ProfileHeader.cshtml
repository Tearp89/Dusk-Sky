@model ProfileModelBase

<div class="profile-banner py-5" style="background-image: linear-gradient(rgba(0,0,0,0.6), rgba(0,0,0,0.6)), url('@Model.ProfileHeader.BannerUrl');">
    <div class="container text-white py-4">
        <div class="row align-items-center">
            <div class="col-lg-3 text-center mb-4 mb-lg-0">
                <img src="@Model.ProfileHeader.AvatarUrl" class="profile-avatar rounded-circle" alt="Avatar de @Model.ProfileHeader.Username" />
            </div>
            <div class="col-lg-9">
                <div class="d-flex flex-column flex-lg-row align-items-center justify-content-between">
                    <div class="text-center text-lg-start">
                        <h1 class="display-5 fw-bold">@Model.ProfileHeader.Username</h1>
                        <p class="lead opacity-75">@Model.ProfileHeader.Bio</p>
                    </div>
                    
                    <div class="profile-actions mt-3 mt-lg-0" style="min-height: 38px;">
                        @if (Model.IsOwnProfile)
                        {
                            <a asp-page="/Users/Profile/EditProfile" asp-route-userId="@Model.ProfileHeader.UserId" class="btn btn-outline-light">Edit Profile</a>
                        }
                        else if (User.Identity?.IsAuthenticated ?? false)
                        {
                            @* --- LÓGICA DE AMISTAD FORZADA EXCLUSIVA --- *@
                            @if (Model.Friendship?.Status == "friends")
                            {
                                <button class="btn btn-success" disabled>✔️ Friends</button>
                            }
                            else if (Model.Friendship?.Status == "pending_outgoing")
                            {
                                <button class="btn btn-secondary" disabled>Request Sent</button>
                            }
                            else if (Model.Friendship?.Status == "pending_incoming")
                            {
                                <form method="post" asp-page-handler="AcceptRequest" asp-route-profileUserId="@Model.ProfileHeader.UserId" asp-route-requestId="@Model.Friendship.RequestId">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-primary me-2">Accept</button>
                                </form>
                                <form method="post" asp-page-handler="RejectRequest" asp-route-profileUserId="@Model.ProfileHeader.UserId" asp-route-requestId="@Model.Friendship.RequestId">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-outline-danger">Reject</button>
                                </form>
                            }
                            else if (Model.Friendship?.Status == "not_friends")
                            {
                                <form method="post" asp-page-handler="SendRequest" asp-route-profileUserId="@Model.ProfileHeader.UserId">
                                    @Html.AntiForgeryToken()
                                    <button type="submit" class="btn btn-primary">Add Friend</button>
                                </form>
                            }
                            @* --- FIN LÓGICA DE AMISTAD FORZADA EXCLUSIVA --- *@

                            <div class="dropdown ms-2"> @* ms-2 para un pequeño margen a la izquierda de los botones de amistad *@
                                <button class="btn btn-light dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                    <i class="bi bi-three-dots"></i> @* Icono de tres puntos (menú kebab) *@
                                </button>
                                <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownMenuButton">
                                    <li>
                                        <a class="dropdown-item text-danger" href="#" data-bs-toggle="modal" data-bs-target="#reportUserModal">
                                            <i class="bi bi-flag-fill me-2"></i> Reportar Usuario
                                        </a>
                                    </li>
                                </ul>
                            </div>
                        }
                    </div>
                </div>
                <div class="d-flex justify-content-center justify-content-lg-start gap-4 mt-3 pt-3 border-top border-light border-opacity-25">
                    <div class="text-center">
                        <span class="fs-4 fw-bold d-block">@Model.ProfileHeader.ReviewCount</span>
                        <small class="text-uppercase opacity-75">Reviews</small>
                    </div>
                    <div class="text-center">
                        <span class="fs-4 fw-bold d-block">@Model.ProfileHeader.ListCount</span>
                        <small class="text-uppercase opacity-75">Lists</small>
                    </div>
                    <div class="text-center">
                        <span class="fs-4 fw-bold d-block">@Model.ProfileHeader.FriendCount</span>
                        <small class="text-uppercase opacity-75">Friends</small>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@* ▼▼▼ AÑADE ESTE BLOQUE AQUÍ ▼▼▼ *@
@if (TempData["SuccessMessage"] != null || TempData["StatusMessage"] != null)
{
    string message;
    string alertClass;

    if (TempData["SuccessMessage"] != null)
    {
        message = TempData["SuccessMessage"].ToString();
        alertClass = "alert-success";
    }
    else
    {
        message = TempData["StatusMessage"].ToString();
        // Asumimos que StatusMessage puede ser de éxito o error
        alertClass = message.StartsWith("Error") ? "alert-danger" : "alert-success";
    }

    <div class="container mt-n4" style="position: relative; z-index: 10;">
        <div class="alert @alertClass alert-dismissible fade show text-center shadow-lg" role="alert">
            @message
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    </div>
}


<div class="modal fade" id="reportUserModal" tabindex="-1" aria-labelledby="reportUserModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="reportUserModalLabel">Reportar a @Model.ProfileHeader.Username</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <form method="post" asp-page-handler="ReportUser" asp-route-profileUserId="@Model.ProfileHeader.UserId">
                @Html.AntiForgeryToken() @* Es buena práctica incluir el token aquí también *@
                <div class="modal-body">
                    <p>Por favor, explica por qué estás reportando a este usuario:</p>
                    <div class="mb-3">
                        <label for="reportReason" class="form-label">Motivo del reporte:</label>
                        <textarea class="form-control" id="reportReason" name="Reason" rows="4" required></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Enviar Reporte</button>
                </div>
            </form>
        </div>
    </div>
</div>
@page
@model CreatorModel
@{
    ViewData["Title"] = "Create a review";
    ViewData["ShowBackground"] = false;
}

@if (Model.Game != null)
{
    <div class="container log-review-container py-4">
        <h2 class="mb-4">Log a Game</h2>

        @if (!string.IsNullOrEmpty(Model.SuccessMessage))
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @Model.SuccessMessage
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger">Please correct the errors in the form.</div>
        }

        <form method="post">
            <input type="hidden" asp-for="GameId" />
            <input type="hidden" asp-for="Review.GameId" />

            <div class="d-flex flex-column flex-md-row gap-4 mb-4 align-items-start">
                <img src="@Model.Game.HeaderUrl" alt="Game Image" class="rounded shadow"
                    style="width: 180px; height: auto; max-height: 240px; object-fit: cover;" />

                <div class="flex-grow-1">
                    <h4 class="fw-bold">@Model.Game.Title</h4>

                    <div class="mb-3">
                        <label asp-for="Review.Content" class="form-label">Review</label>
                        <textarea asp-for="Review.Content" class="form-control" rows="4"></textarea>
                        <span asp-validation-for="Review.Content" class="text-danger"></span>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Rating</label>
                        <div class="star-rating-svg">
                            @for (int i = 10; i >= 1; i--)
                            {
                                var value = (i * 0.5).ToString(System.Globalization.CultureInfo.InvariantCulture);
                                var id = $"rating-{value.Replace(".", "_")}";
                                var gradientId = $"gradient-{id}";
                                var isLeft = i % 2 == 0;
                                var clipClass = isLeft ? "clip-left" : "clip-right";

                                <input type="radio" id="@id" name="Review.Rating" value="@value" @(Model.Review.Rating == i *
                                                                                                                             0.5 ? "checked" : "") />
                        <label for="@id">
                            <svg width="24" height="24" viewBox="0 0 24 24" class="star-svg @clipClass">
                                <defs>
                                    <linearGradient id="@gradientId" x1="0%" y1="0%" x2="100%" y2="0%">
                                        <stop offset="50%" stop-color="gray" />
                                        <stop offset="50%" stop-color="transparent" />
                                    </linearGradient>
                                </defs>
                                <path fill="url(#@gradientId)" d="M12 17.27L18.18 21l-1.64-7.03
                         L22 9.24l-7.19-.61L12 2 9.19 8.63
                         2 9.24l5.46 4.73L5.82 21z" />
                            </svg>
                        </label>
                                                }
                        </div>

                        <span asp-validation-for="Review.Rating" class="text-danger"></span>
                    </div>


                    <button type="submit" class="btn btn-primary">Submit Review</button>
                </div>
            </div>
        </form>
    </div>
}
else
{
    <p class="text-danger">No se pudo cargar la informaci√≥n del juego.</p>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
